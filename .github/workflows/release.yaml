name: Build and Release Obsidian Plugin

on:
    push:
        tags:
            - "*" # we'll validate it's SemVer

permissions:
    contents: write # needed for release + committing to default branch

concurrency:
    group: release-${{ github.ref_name }}
    cancel-in-progress: true

jobs:
    build-and-release:
        runs-on: ubuntu-latest

        steps:
            # === Build from the tag ===
            - name: Checkout tag ref
              uses: actions/checkout@v4
              with:
                  ref: ${{ github.ref }} # the pushed tag
                  fetch-depth: 0

            - name: Get and validate SemVer from tag
              id: semver
              shell: bash
              run: |
                  set -euo pipefail
                  RAW="${GITHUB_REF_NAME}"
                  VERSION="${RAW#v}"  # strip optional 'v'
                  SEMVER_RE='^(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(-([0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*))?(\+([0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*))?$'
                  if [[ ! "$VERSION" =~ $SEMVER_RE ]]; then
                    echo "Tag '$RAW' is not valid SemVer (e.g., v1.2.3, 1.2.3, v1.2.3-rc.1)." >&2
                    exit 1
                  fi
                  echo "version=$VERSION" >> "$GITHUB_OUTPUT"
                  echo "raw_tag=$RAW" >> "$GITHUB_OUTPUT"

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"
                  cache-dependency-path: |
                      package-lock.json
                      **/package-lock.json

            - name: Install and build
              shell: bash
              run: |
                  set -euo pipefail
                  npm ci
                  npm run build --if-present

            - name: Prepare release assets
              shell: bash
              run: |
                  set -euo pipefail
                  REPO="${{ github.event.repository.name }}"
                  mkdir -p "$REPO"
                  for f in main.js manifest.json styles.css; do
                    if [[ -f "$f" ]]; then cp -v "$f" "$REPO"/; fi
                  done
                  (cd "$REPO" && zip -r "../${REPO}.zip" .)

            # === Create GitHub release with autogenerated notes ===
            - name: Create GitHub release
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: ${{ steps.semver.outputs.raw_tag }}
                  name: ${{ steps.semver.outputs.raw_tag }}
                  generate_release_notes: true
                  prerelease: ${{ contains(steps.semver.outputs.raw_tag, '-') }}
                  files: |
                      ${{ github.event.repository.name }}.zip
                      main.js
                      manifest.json
                      styles.css
